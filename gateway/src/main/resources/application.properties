spring.application.name=gateway

server.port=8080
# Gateway configuration
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/users/**
spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.name=userCB
spring.cloud.gateway.routes[0].filters[0].args.fallbackUri=forward:/fallback

spring.cloud.gateway.routes[0].filters[1].name=RequestRateLimiter
spring.cloud.gateway.routes[0].filters[1].args.redisRateLimiter.replenishRate=1
spring.cloud.gateway.routes[0].filters[1].args.redisRateLimiter.burstCapacity=1

spring.cloud.gateway.routes[0].filters[2]=AddRequestHeader=sayed,assiut
spring.cloud.gateway.routes[0].filters[3]=AddResponseHeader=tony,assiut


spring.cloud.gateway.routes[1].id=product-service
spring.cloud.gateway.routes[1].uri=lb://PRODUCT-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/products/**
spring.cloud.gateway.routes[1].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[0].args.name=productCB
spring.cloud.gateway.routes[1].filters[0].args.fallbackUri=forward:/fallback

# RequestHeader
spring.cloud.gateway.routes[1].filters[1].name=AddRequestHeader
spring.cloud.gateway.routes[1].filters[1].args.name=tony
spring.cloud.gateway.routes[1].filters[1].args.value=tony

spring.cloud.gateway.routes[1].filters[2].name=RequestRateLimiter
spring.cloud.gateway.routes[1].filters[2].args.redisRateLimiter.replenishRate=1
spring.cloud.gateway.routes[1].filters[2].args.redisRateLimiter.burstCapacity=1

spring.cloud.gateway.filter.request-rate-limiter.deny-empty-key=false

# Eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

# Redis configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379